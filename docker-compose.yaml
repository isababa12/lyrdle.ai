volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true
services:
  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_MULTIPLE_DATABASES: users,lyrics
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: goodnightworld
    ports:
      - 15432:5432
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: goodnightworld
      PGADMIN_DISABLE_POSTFIX: 1
  users:
    build:
      context: ./users
      dockerfile: ./Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./users:/app
    environment:
      DATABASE_URL: postgresql://admin:goodnightworld@postgres/users
      WAIT_HOSTS: postgres:5432
      SIGNING_KEY: ${SIGNING_KEY}
  lyrics:
    build:
      context: ./lyrics
      dockerfile: ./Dockerfile.dev
    ports:
      - "8010:8000"
    volumes:
      - ./lyrics:/app
    environment:
      DATABASE_URL: postgresql://admin:goodnightworld@postgres/lyrics
      WAIT_HOSTS: postgres:5432
      SIGNING_KEY: ${SIGNING_KEY}
      OPEN_AI_KEY: ${OPEN_AI_KEY}

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: http://localhost:8000
      REACT_APP_USERS_API_HOST: http://localhost:8000
      REACT_APP_LYRICS_API_HOST: http://localhost:8010
